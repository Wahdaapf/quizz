{"ast":null,"code":"var _jsxFileName = \"D:\\\\koding\\\\reactjs\\\\quizz\\\\src\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Question from \"./Question\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questions = [{\n  question: \"Apa ibukota Indonesia?\",\n  options: [\"Jakarta\", \"Surabaya\", \"Bandung\", \"Medan\"],\n  correctAnswer: \"Jakarta\"\n}, {\n  question: \"Siapakah presiden pertama Indonesia?\",\n  options: [\"Soekarno\", \"Soeharto\", \"Megawati\", \"Jokowi\"],\n  correctAnswer: \"Soekarno\"\n}, {\n  question: \"Berapakah hasil dari 10 + 5?\",\n  options: [\"12\", \"15\", \"18\", \"20\"],\n  correctAnswer: \"15\"\n}, {\n  question: \"Apa warna langit?\",\n  options: [\"Merah\", \"Biru\", \"Hijau\", \"Kuning\"],\n  correctAnswer: \"Biru\"\n}, {\n  question: \"Siapakah penemu gravitasi?\",\n  options: [\"Isaac Newton\", \"Albert Einstein\", \"Galileo Galilei\", \"Nikola Tesla\"],\n  correctAnswer: \"Isaac Newton\"\n}].sort(() => Math.random() - 0.5);\nconst Quiz = () => {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [quizCompleted, setQuizCompleted] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [score, setScore] = useState(0);\n  const [time, setTime] = useState(20);\n  useEffect(() => {\n    // Mengacak urutan opsi jawaban setiap kali currentQuestion berubah\n    questions[currentQuestion].options.sort(() => Math.random() - 0.5);\n  }, [currentQuestion]);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      if (time > 0) {\n        setTime(prevTime => prevTime - 1);\n      } else {\n        handleNextQuestion();\n      }\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [time]);\n  const handleOptionClick = option => {\n    if (selectedOption === null) {\n      setSelectedOption(option);\n      if (option === questions[currentQuestion].correctAnswer) {\n        setScore(prevScore => prevScore + 20);\n      } else {\n        setScore(prevScore => prevScore - 20);\n      }\n    }\n  };\n  const handleNextQuestion = () => {\n    setSelectedOption(null);\n    setTime(20);\n    if (selectedOption === null) {\n      setScore(prevScore => prevScore - 20); // Mengurangi 20 poin jika pengguna tidak menjawab\n    }\n\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(prevQuestion => prevQuestion + 1);\n    } else {\n      if (selectedOption !== null) {\n        setQuizCompleted(true);\n      }\n    }\n  };\n  const isCorrectOption = option => {\n    return option === questions[currentQuestion].correctAnswer;\n  };\n  const handleRestartQuiz = () => {\n    setCurrentQuestion(0);\n    setQuizCompleted(false);\n    setSelectedOption(null);\n    setScore(0);\n    setTime(20);\n    questions.forEach(question => {\n      question.options.sort(() => Math.random() - 0.5);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: quizCompleted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Quiz Selesai! Skor Anda: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRestartQuiz,\n        children: \"Main Lagi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Quiz Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Waktu Tersisa: \", time, \" detik\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Skor: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Question, {\n          question: questions[currentQuestion],\n          selectedOption: selectedOption,\n          handleOptionClick: handleOptionClick,\n          isCorrectOption: isCorrectOption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextQuestion,\n        disabled: selectedOption === null,\n        children: \"Lanjutkan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"4Sba9qzyxYgGBZEwrlZ66GkeTgM=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","Question","jsxDEV","_jsxDEV","questions","question","options","correctAnswer","sort","Math","random","Quiz","_s","currentQuestion","setCurrentQuestion","quizCompleted","setQuizCompleted","selectedOption","setSelectedOption","score","setScore","time","setTime","timer","setInterval","prevTime","handleNextQuestion","clearInterval","handleOptionClick","option","prevScore","length","prevQuestion","isCorrectOption","handleRestartQuiz","forEach","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","disabled","_c","$RefreshReg$"],"sources":["D:/koding/reactjs/quizz/src/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Question from \"./Question\";\r\n\r\nconst questions = [\r\n  {\r\n    question: \"Apa ibukota Indonesia?\",\r\n    options: [\"Jakarta\", \"Surabaya\", \"Bandung\", \"Medan\"],\r\n    correctAnswer: \"Jakarta\",\r\n  },\r\n  {\r\n    question: \"Siapakah presiden pertama Indonesia?\",\r\n    options: [\"Soekarno\", \"Soeharto\", \"Megawati\", \"Jokowi\"],\r\n    correctAnswer: \"Soekarno\",\r\n  },\r\n  {\r\n    question: \"Berapakah hasil dari 10 + 5?\",\r\n    options: [\"12\", \"15\", \"18\", \"20\"],\r\n    correctAnswer: \"15\",\r\n  },\r\n  {\r\n    question: \"Apa warna langit?\",\r\n    options: [\"Merah\", \"Biru\", \"Hijau\", \"Kuning\"],\r\n    correctAnswer: \"Biru\",\r\n  },\r\n  {\r\n    question: \"Siapakah penemu gravitasi?\",\r\n    options: [\r\n      \"Isaac Newton\",\r\n      \"Albert Einstein\",\r\n      \"Galileo Galilei\",\r\n      \"Nikola Tesla\",\r\n    ],\r\n    correctAnswer: \"Isaac Newton\",\r\n  },\r\n].sort(() => Math.random() - 0.5);\r\n\r\nconst Quiz = () => {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [quizCompleted, setQuizCompleted] = useState(false);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [score, setScore] = useState(0);\r\n  const [time, setTime] = useState(20);\r\n\r\n  useEffect(() => {\r\n    // Mengacak urutan opsi jawaban setiap kali currentQuestion berubah\r\n    questions[currentQuestion].options.sort(() => Math.random() - 0.5);\r\n  }, [currentQuestion]);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      if (time > 0) {\r\n        setTime((prevTime) => prevTime - 1);\r\n      } else {\r\n        handleNextQuestion();\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [time]);\r\n\r\n  const handleOptionClick = (option) => {\r\n    if (selectedOption === null) {\r\n      setSelectedOption(option);\r\n\r\n      if (option === questions[currentQuestion].correctAnswer) {\r\n        setScore((prevScore) => prevScore + 20);\r\n      } else {\r\n        setScore((prevScore) => prevScore - 20);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    setSelectedOption(null);\r\n    setTime(20);\r\n\r\n    if (selectedOption === null) {\r\n      setScore((prevScore) => prevScore - 20); // Mengurangi 20 poin jika pengguna tidak menjawab\r\n    }\r\n\r\n    if (currentQuestion < questions.length - 1) {\r\n      setCurrentQuestion((prevQuestion) => prevQuestion + 1);\r\n    } else {\r\n      if (selectedOption !== null) {\r\n        setQuizCompleted(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const isCorrectOption = (option) => {\r\n    return option === questions[currentQuestion].correctAnswer;\r\n  };\r\n\r\n  const handleRestartQuiz = () => {\r\n    setCurrentQuestion(0);\r\n    setQuizCompleted(false);\r\n    setSelectedOption(null);\r\n    setScore(0);\r\n    setTime(20);\r\n    questions.forEach((question) => {\r\n      question.options.sort(() => Math.random() - 0.5);\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      {quizCompleted ? (\r\n        <div>\r\n          <h1>Quiz Selesai! Skor Anda: {score}</h1>\r\n          <button onClick={handleRestartQuiz}>Main Lagi</button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"container\">\r\n          <h1>Quiz Game</h1>\r\n          <p>Waktu Tersisa: {time} detik</p>\r\n          <h2>Skor: {score}</h2>\r\n          <div>\r\n            <Question\r\n              question={questions[currentQuestion]}\r\n              selectedOption={selectedOption}\r\n              handleOptionClick={handleOptionClick}\r\n              isCorrectOption={isCorrectOption}\r\n            />\r\n          </div>\r\n          <button\r\n            onClick={handleNextQuestion}\r\n            disabled={selectedOption === null}\r\n          >\r\n            Lanjutkan\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}