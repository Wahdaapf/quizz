{"ast":null,"code":"var _jsxFileName = \"D:\\\\koding\\\\reactjs\\\\quizz\\\\src\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizGame = () => {\n  _s();\n  const [questions, setQuestions] = useState([{\n    question: 'Pertanyaan 1?',\n    options: ['Opsi A', 'Opsi B', 'Opsi C', 'Opsi D'],\n    correctAnswer: 1 // Misalnya opsi B adalah jawaban benar (indeks dimulai dari 0)\n  }\n  // ... Soal-soal berikutnya\n  ]);\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [score, setScore] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(20); // Waktu awal 20 detik untuk setiap soal\n\n  useEffect(() => {\n    if (timeLeft === 0) {\n      goToNextQuestion();\n    }\n    const timer = setInterval(() => {\n      setTimeLeft(prevTime => prevTime - 1);\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n  const handleOptionSelect = optionIndex => {\n    if (selectedOption === null) {\n      setSelectedOption(optionIndex);\n      if (optionIndex === questions[currentQuestion].correctAnswer) {\n        setScore(prevScore => prevScore + 20);\n      }\n    }\n  };\n  const goToNextQuestion = () => {\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(prevQuestion => prevQuestion + 1);\n      setSelectedOption(null);\n      setTimeLeft(20);\n    }\n    // Jika sudah di soal terakhir, mungkin ada logika untuk menampilkan skor akhir\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Waktu Tersisa: \", timeLeft, \" detik\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Skor: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: questions[currentQuestion].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            backgroundColor: selectedOption === index ? index === questions[currentQuestion].correctAnswer ? 'green' // jika dipilih dan benar\n            : 'red' // jika dipilih tapi salah\n            : ''\n          },\n          onClick: () => handleOptionSelect(index),\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToNextQuestion,\n        children: \"Soal Berikutnya\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizGame, \"B1kIjcUVeTvMjj2aMwXOvRqeKOM=\");\n_c = QuizGame;\nexport default QuizGame;\nvar _c;\n$RefreshReg$(_c, \"QuizGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","QuizGame","_s","questions","setQuestions","question","options","correctAnswer","currentQuestion","setCurrentQuestion","selectedOption","setSelectedOption","score","setScore","timeLeft","setTimeLeft","goToNextQuestion","timer","setInterval","prevTime","clearInterval","handleOptionSelect","optionIndex","prevScore","length","prevQuestion","children","fileName","_jsxFileName","lineNumber","columnNumber","map","option","index","style","backgroundColor","onClick","_c","$RefreshReg$"],"sources":["D:/koding/reactjs/quizz/src/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst QuizGame = () => {\r\n  const [questions, setQuestions] = useState([\r\n    {\r\n      question: 'Pertanyaan 1?',\r\n      options: ['Opsi A', 'Opsi B', 'Opsi C', 'Opsi D'],\r\n      correctAnswer: 1, // Misalnya opsi B adalah jawaban benar (indeks dimulai dari 0)\r\n    },\r\n    // ... Soal-soal berikutnya\r\n  ]);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [score, setScore] = useState(0);\r\n  const [timeLeft, setTimeLeft] = useState(20); // Waktu awal 20 detik untuk setiap soal\r\n\r\n  useEffect(() => {\r\n    if (timeLeft === 0) {\r\n      goToNextQuestion();\r\n    }\r\n\r\n    const timer = setInterval(() => {\r\n      setTimeLeft(prevTime => prevTime - 1);\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [timeLeft]);\r\n\r\n  const handleOptionSelect = (optionIndex) => {\r\n    if (selectedOption === null) {\r\n      setSelectedOption(optionIndex);\r\n\r\n      if (optionIndex === questions[currentQuestion].correctAnswer) {\r\n        setScore(prevScore => prevScore + 20);\r\n      }\r\n    }\r\n  };\r\n\r\n  const goToNextQuestion = () => {\r\n    if (currentQuestion < questions.length - 1) {\r\n      setCurrentQuestion(prevQuestion => prevQuestion + 1);\r\n      setSelectedOption(null);\r\n      setTimeLeft(20);\r\n    }\r\n    // Jika sudah di soal terakhir, mungkin ada logika untuk menampilkan skor akhir\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <p>Waktu Tersisa: {timeLeft} detik</p>\r\n        <p>Skor: {score}</p>\r\n      </div>\r\n      <div>\r\n        <h3>{questions[currentQuestion].question}</h3>\r\n        <ul>\r\n          {questions[currentQuestion].options.map((option, index) => (\r\n            <li\r\n              key={index}\r\n              style={{\r\n                backgroundColor:\r\n                  selectedOption === index\r\n                    ? index === questions[currentQuestion].correctAnswer\r\n                      ? 'green' // jika dipilih dan benar\r\n                      : 'red' // jika dipilih tapi salah\r\n                    : '',\r\n              }}\r\n              onClick={() => handleOptionSelect(index)}\r\n            >\r\n              {option}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <button onClick={goToNextQuestion}>Soal Berikutnya</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizGame;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}