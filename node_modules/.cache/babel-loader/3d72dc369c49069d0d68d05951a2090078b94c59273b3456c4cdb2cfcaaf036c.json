{"ast":null,"code":"var _jsxFileName = \"D:\\\\koding\\\\reactjs\\\\quizz\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questions = [{\n  question: \"Apa ibukota Indonesia?\",\n  options: [\"Jakarta\", \"Surabaya\", \"Bandung\", \"Medan\"],\n  correctAnswer: \"Jakarta\"\n}, {\n  question: \"Siapakah presiden pertama Indonesia?\",\n  options: [\"Soekarno\", \"Soeharto\", \"Megawati\", \"Jokowi\"],\n  correctAnswer: \"Soekarno\"\n}, {\n  question: \"Berapakah hasil dari 10 + 5?\",\n  options: [\"12\", \"15\", \"18\", \"20\"],\n  correctAnswer: \"15\"\n}, {\n  question: \"Apa warna langit?\",\n  options: [\"Merah\", \"Biru\", \"Hijau\", \"Kuning\"],\n  correctAnswer: \"Biru\"\n}, {\n  question: \"Siapakah penemu gravitasi?\",\n  options: [\"Isaac Newton\", \"Albert Einstein\", \"Galileo Galilei\", \"Nikola Tesla\"],\n  correctAnswer: \"Isaac Newton\"\n}];\nconst questionsCopy = [...questions];\n\n// Fungsi untuk mengacak array\nconst shuffleArray = array => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n};\n\n// Mengacak urutan pertanyaan dan opsi jawaban pada setiap render\nuseEffect(() => {\n  questionsCopy.forEach(question => {\n    question.options = shuffleArray(question.options);\n  });\n}, [currentQuestion]);\nconst App = () => {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [quizCompleted, setQuizCompleted] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [score, setScore] = useState(0);\n  const [time, setTime] = useState(20);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      if (time > 0) {\n        setTime(prevTime => prevTime - 1);\n      } else {\n        handleNextQuestion();\n      }\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [time]);\n  const handleOptionClick = option => {\n    if (selectedOption === null) {\n      setSelectedOption(option);\n      if (option === questions[currentQuestion].correctAnswer) {\n        setScore(prevScore => prevScore + 20);\n      } else {\n        setScore(prevScore => prevScore - 20);\n      }\n    }\n  };\n  const handleNextQuestion = () => {\n    setSelectedOption(null);\n    setTime(20);\n    if (selectedOption === null) {\n      setScore(prevScore => prevScore - 20); // Mengurangi 20 poin jika pengguna tidak menjawab\n    }\n\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(prevQuestion => prevQuestion + 1);\n    } else {\n      if (selectedOption !== null) {\n        setQuizCompleted(true);\n      }\n    }\n  };\n  const isCorrectOption = option => {\n    return option === questions[currentQuestion].correctAnswer;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: quizCompleted ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Quiz Selesai! Skor Anda: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Quiz Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Waktu Tersisa: \", time, \" detik\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Skor: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: questions[currentQuestion].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOptionClick(option),\n          style: {\n            backgroundColor: selectedOption === option ? isCorrectOption(option) ? \"green\" : \"red\" : selectedOption !== null && isCorrectOption(option) ? \"green\" : \"white\"\n          },\n          disabled: selectedOption !== null,\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextQuestion,\n        disabled: selectedOption === null,\n        children: \"Lanjutkan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"EdpOypXm7sN7QktWYj8pulj8M/M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","questions","question","options","correctAnswer","questionsCopy","shuffleArray","array","i","length","j","Math","floor","random","forEach","currentQuestion","App","_s","setCurrentQuestion","quizCompleted","setQuizCompleted","selectedOption","setSelectedOption","score","setScore","time","setTime","timer","setInterval","prevTime","handleNextQuestion","clearInterval","handleOptionClick","option","prevScore","prevQuestion","isCorrectOption","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","style","backgroundColor","disabled","_c","$RefreshReg$"],"sources":["D:/koding/reactjs/quizz/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst questions = [\n  {\n    question: \"Apa ibukota Indonesia?\",\n    options: [\"Jakarta\", \"Surabaya\", \"Bandung\", \"Medan\"],\n    correctAnswer: \"Jakarta\",\n  },\n  {\n    question: \"Siapakah presiden pertama Indonesia?\",\n    options: [\"Soekarno\", \"Soeharto\", \"Megawati\", \"Jokowi\"],\n    correctAnswer: \"Soekarno\",\n  },\n  {\n    question: \"Berapakah hasil dari 10 + 5?\",\n    options: [\"12\", \"15\", \"18\", \"20\"],\n    correctAnswer: \"15\",\n  },\n  {\n    question: \"Apa warna langit?\",\n    options: [\"Merah\", \"Biru\", \"Hijau\", \"Kuning\"],\n    correctAnswer: \"Biru\",\n  },\n  {\n    question: \"Siapakah penemu gravitasi?\",\n    options: [\n      \"Isaac Newton\",\n      \"Albert Einstein\",\n      \"Galileo Galilei\",\n      \"Nikola Tesla\",\n    ],\n    correctAnswer: \"Isaac Newton\",\n  },\n];\n\nconst questionsCopy = [...questions];\n\n  // Fungsi untuk mengacak array\n  const shuffleArray = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  };\n\n  // Mengacak urutan pertanyaan dan opsi jawaban pada setiap render\n  useEffect(() => {\n    questionsCopy.forEach((question) => {\n      question.options = shuffleArray(question.options);\n    });\n  }, [currentQuestion]);\n\nconst App = () => {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [quizCompleted, setQuizCompleted] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [score, setScore] = useState(0);\n  const [time, setTime] = useState(20);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      if (time > 0) {\n        setTime((prevTime) => prevTime - 1);\n      } else {\n        handleNextQuestion();\n      }\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [time]);\n\n  const handleOptionClick = (option) => {\n    if (selectedOption === null) {\n      setSelectedOption(option);\n\n      if (option === questions[currentQuestion].correctAnswer) {\n        setScore((prevScore) => prevScore + 20);\n      } else {\n        setScore((prevScore) => prevScore - 20);\n      }\n    }\n  };\n\n  const handleNextQuestion = () => {\n    setSelectedOption(null);\n    setTime(20);\n\n    if (selectedOption === null) {\n      setScore((prevScore) => prevScore - 20); // Mengurangi 20 poin jika pengguna tidak menjawab\n    }\n\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion((prevQuestion) => prevQuestion + 1);\n    } else {\n      if (selectedOption !== null) {\n        setQuizCompleted(true);\n      }\n    }\n  };\n\n  const isCorrectOption = (option) => {\n    return option === questions[currentQuestion].correctAnswer;\n  };\n\n  return (\n    <div>\n      {quizCompleted ? (\n        <p>Quiz Selesai! Skor Anda: {score}</p>\n      ) : (\n        <div>\n          <h1>Quiz Game</h1>\n          <p>Waktu Tersisa: {time} detik</p>\n          <h2>Skor: {score}</h2>\n          <div>\n            <p>{questions[currentQuestion].question}</p>\n            {questions[currentQuestion].options.map((option, index) => (\n              <button\n                key={index}\n                onClick={() => handleOptionClick(option)}\n                style={{\n                  backgroundColor:\n                    selectedOption === option\n                      ? isCorrectOption(option)\n                        ? \"green\"\n                        : \"red\"\n                      : selectedOption !== null && isCorrectOption(option)\n                      ? \"green\"\n                      : \"white\",\n                }}\n                disabled={selectedOption !== null}\n              >\n                {option}\n              </button>\n            ))}\n          </div>\n          <button\n            onClick={handleNextQuestion}\n            disabled={selectedOption === null}\n          >\n            Lanjutkan\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}